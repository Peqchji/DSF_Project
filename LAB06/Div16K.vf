////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Div16K.vf
// /___/   /\     Timestamp : 12/12/2022 02:20:56
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "C:/Users/Peqch/Desktop/Digital system Fundamental/ISE/DSF_Project/LAB06/Div16K.vf" -w "C:/Users/Peqch/Desktop/Digital system Fundamental/ISE/DSF_Project/LAB06/Div16K.sch"
//Design Name: Div16K
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB4CE_HXILINX_Div16K(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 4'b1111;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;
	else if (CE)
	  {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Div1k_MUSER_Div16K(In_CLK, 
                          Out_CLK);

    input In_CLK;
   output Out_CLK;
   
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_8;
   
   COUNTER0_9  XLXI_4 (.CLK(In_CLK), 
                      .Clr(XLXN_8), 
                      .bit(), 
                      .TC(XLXN_4));
   GND  XLXI_7 (.G(XLXN_8));
   COUNTER0_9  XLXI_8 (.CLK(XLXN_4), 
                      .Clr(XLXN_8), 
                      .bit(), 
                      .TC(XLXN_2));
   COUNTER0_9  XLXI_9 (.CLK(XLXN_2), 
                      .Clr(XLXN_8), 
                      .bit(), 
                      .TC(Out_CLK));
endmodule
`timescale 1ns / 1ps

module Div16K(In_CLK, 
              Out_CLK);

    input In_CLK;
   output Out_CLK;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_4;
   
   Div1k_MUSER_Div16K  XLXI_1 (.In_CLK(In_CLK), 
                              .Out_CLK(XLXN_1));
   (* HU_SET = "XLXI_2_16" *) 
   CB4CE_HXILINX_Div16K  XLXI_2 (.C(XLXN_1), 
                                .CE(XLXN_3), 
                                .CLR(XLXN_4), 
                                .CEO(), 
                                .Q0(), 
                                .Q1(), 
                                .Q2(), 
                                .Q3(), 
                                .TC(Out_CLK));
   VCC  XLXI_3 (.P(XLXN_3));
   GND  XLXI_4 (.G(XLXN_4));
endmodule
