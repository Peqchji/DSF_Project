////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : DIsplay_drc.vf
// /___/   /\     Timestamp : 11/06/2022 02:06:24
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog DIsplay_drc.vf -w "C:/Users/Peqch/Desktop/Digital system Fundamental/ISE/DSF/LAB08/DIsplay.sch"
//Design Name: DIsplay
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_DIsplay (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_DIsplay(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module DIsplay(Bit0, 
               Bit1, 
               Bit2, 
               Bit3, 
               CLK_Display, 
               Data, 
               Digit0, 
               Digit1, 
               Digit2, 
               Digit3);

    input [3:0] Bit0;
    input [3:0] Bit1;
    input [3:0] Bit2;
    input [3:0] Bit3;
    input CLK_Display;
   output [6:0] Data;
   output Digit0;
   output Digit1;
   output Digit2;
   output Digit3;
   
   wire [3:0] XLXN_2;
   wire XLXN_5;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   
   MUX4_1_4  XLXI_2 (.Q0(Bit0[3:0]), 
                    .Q1(Bit1[3:0]), 
                    .Q2(Bit2[3:0]), 
                    .Q3(Bit3[3:0]), 
                    .S0(XLXN_16), 
                    .S1(XLXN_18), 
                    .Y(XLXN_2[3:0]));
   (* HU_SET = "XLXI_3_0" *) 
   CB2CE_HXILINX_DIsplay  XLXI_3 (.C(XLXN_10), 
                                 .CE(XLXN_5), 
                                 .CLR(XLXN_12), 
                                 .CEO(), 
                                 .Q0(XLXN_16), 
                                 .Q1(XLXN_18), 
                                 .TC());
   GND  XLXI_4 (.G(XLXN_12));
   VCC  XLXI_5 (.P(XLXN_5));
   Div100k  XLXI_6 (.CLR(XLXN_12), 
                   .In_CLK(CLK_Display), 
                   .Out_CLK(XLXN_10));
   HEX_decoder  XLXI_7 (.BCD(XLXN_2[3:0]), 
                       .segments(Data[6:0]));
   (* HU_SET = "XLXI_9_1" *) 
   D2_4E_HXILINX_DIsplay  XLXI_9 (.A0(XLXN_16), 
                                 .A1(XLXN_18), 
                                 .E(XLXN_17), 
                                 .D0(XLXN_24), 
                                 .D1(XLXN_25), 
                                 .D2(XLXN_26), 
                                 .D3(XLXN_27));
   VCC  XLXI_10 (.P(XLXN_17));
   INV  XLXI_12 (.I(XLXN_24), 
                .O(Digit0));
   INV  XLXI_13 (.I(XLXN_25), 
                .O(Digit1));
   INV  XLXI_14 (.I(XLXN_26), 
                .O(Digit2));
   INV  XLXI_15 (.I(XLXN_27), 
                .O(Digit3));
endmodule
