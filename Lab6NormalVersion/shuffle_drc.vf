////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : shuffle_drc.vf
// /___/   /\     Timestamp : 10/12/2022 12:36:38
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog shuffle_drc.vf -w C:/Users/Chaks/Desktop/Lab6/Lab6/shuffle.sch
//Design Name: shuffle
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module shuffle(nIN, 
               nOUT);

    input [3:0] nIN;
   output [3:0] nOUT;
   
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   
   AND3B3  XLXI_2 (.I0(nIN[0]), 
                  .I1(nIN[1]), 
                  .I2(nIN[3]), 
                  .O(nOUT[3]));
   AND3B2  XLXI_3 (.I0(nIN[2]), 
                  .I1(nIN[3]), 
                  .I2(nIN[1]), 
                  .O(XLXN_15));
   AND3B2  XLXI_4 (.I0(nIN[1]), 
                  .I1(nIN[2]), 
                  .I2(nIN[0]), 
                  .O(XLXN_16));
   AND3B2  XLXI_5 (.I0(nIN[2]), 
                  .I1(nIN[3]), 
                  .I2(nIN[0]), 
                  .O(XLXN_17));
   OR3  XLXI_6 (.I0(XLXN_17), 
               .I1(XLXN_16), 
               .I2(XLXN_15), 
               .O(nOUT[2]));
   AND4B2  XLXI_7 (.I0(nIN[2]), 
                  .I1(nIN[3]), 
                  .I2(nIN[0]), 
                  .I3(nIN[1]), 
                  .O(XLXN_18));
   AND4B2  XLXI_8 (.I0(nIN[1]), 
                  .I1(nIN[3]), 
                  .I2(nIN[0]), 
                  .I3(nIN[2]), 
                  .O(XLXN_19));
   AND3B2  XLXI_9 (.I0(nIN[1]), 
                  .I1(nIN[2]), 
                  .I2(nIN[3]), 
                  .O(XLXN_20));
   OR3  XLXI_10 (.I0(XLXN_20), 
                .I1(XLXN_19), 
                .I2(XLXN_18), 
                .O(nOUT[1]));
   AND3B2  XLXI_11 (.I0(nIN[2]), 
                   .I1(nIN[3]), 
                   .I2(nIN[1]), 
                   .O(XLXN_21));
   AND3B2  XLXI_12 (.I0(nIN[0]), 
                   .I1(nIN[3]), 
                   .I2(nIN[2]), 
                   .O(XLXN_22));
   AND4B3  XLXI_13 (.I0(nIN[0]), 
                   .I1(nIN[1]), 
                   .I2(nIN[2]), 
                   .I3(nIN[3]), 
                   .O(XLXN_23));
   OR3  XLXI_14 (.I0(XLXN_23), 
                .I1(XLXN_22), 
                .I2(XLXN_21), 
                .O(nOUT[0]));
endmodule
