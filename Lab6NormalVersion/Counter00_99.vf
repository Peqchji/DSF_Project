////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Counter00_99.vf
// /___/   /\     Timestamp : 10/11/2022 11:28:55
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/Chaks/Desktop/Lab6/Lab6/Counter00_99.vf -w C:/Users/Chaks/Desktop/Lab6/Lab6/Counter00_99.sch
//Design Name: Counter00_99
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Counter00_99(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module counter0_9_MUSER_Counter00_99(CLK, 
                                     bit, 
                                     TC);

    input CLK;
   output [3:0] bit;
   output TC;
   
   wire XLXN_3;
   wire XLXN_17;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_65;
   wire XLXN_93;
   wire XLXN_95;
   wire XLXN_96;
   wire [3:0] bit_DUMMY;
   
   assign bit[3:0] = bit_DUMMY[3:0];
   (* HU_SET = "XLXI_1_4" *) 
   FJKC_HXILINX_Counter00_99  XLXI_1 (.C(CLK), 
                                     .CLR(XLXN_17), 
                                     .J(XLXN_3), 
                                     .K(XLXN_3), 
                                     .Q(bit_DUMMY[0]));
   VCC  XLXI_3 (.P(XLXN_3));
   (* HU_SET = "XLXI_4_5" *) 
   FJKC_HXILINX_Counter00_99  XLXI_4 (.C(CLK), 
                                     .CLR(XLXN_17), 
                                     .J(XLXN_62), 
                                     .K(bit_DUMMY[0]), 
                                     .Q(bit_DUMMY[1]));
   (* HU_SET = "XLXI_5_6" *) 
   FJKC_HXILINX_Counter00_99  XLXI_5 (.C(CLK), 
                                     .CLR(XLXN_17), 
                                     .J(XLXN_63), 
                                     .K(XLXN_63), 
                                     .Q(bit_DUMMY[2]));
   (* HU_SET = "XLXI_9_7" *) 
   FJKC_HXILINX_Counter00_99  XLXI_9 (.C(CLK), 
                                     .CLR(XLXN_17), 
                                     .J(XLXN_65), 
                                     .K(bit_DUMMY[0]), 
                                     .Q(bit_DUMMY[3]));
   GND  XLXI_11 (.G(XLXN_17));
   AND2B1  XLXI_37 (.I0(bit_DUMMY[3]), 
                   .I1(bit_DUMMY[0]), 
                   .O(XLXN_62));
   AND2  XLXI_38 (.I0(bit_DUMMY[1]), 
                 .I1(bit_DUMMY[0]), 
                 .O(XLXN_63));
   AND3  XLXI_40 (.I0(bit_DUMMY[2]), 
                 .I1(bit_DUMMY[1]), 
                 .I2(bit_DUMMY[0]), 
                 .O(XLXN_65));
   OR2  XLXI_53 (.I0(bit_DUMMY[1]), 
                .I1(bit_DUMMY[0]), 
                .O(XLXN_95));
   OR2  XLXI_54 (.I0(bit_DUMMY[3]), 
                .I1(bit_DUMMY[2]), 
                .O(XLXN_96));
   OR2  XLXI_55 (.I0(XLXN_96), 
                .I1(XLXN_95), 
                .O(XLXN_93));
   INV  XLXI_56 (.I(XLXN_93), 
                .O(TC));
endmodule
`timescale 1ns / 1ps

module Counter00_99(Button, 
                    CLK, 
                    n1, 
                    n10);

    input Button;
    input CLK;
   output [3:0] n1;
   output [3:0] n10;
   
   wire XLXN_3;
   wire XLXN_4;
   
   counter0_9_MUSER_Counter00_99  XLXI_2 (.CLK(XLXN_3), 
                                         .bit(n1[3:0]), 
                                         .TC(XLXN_4));
   counter0_9_MUSER_Counter00_99  XLXI_3 (.CLK(XLXN_4), 
                                         .bit(n10[3:0]), 
                                         .TC());
   AND2  XLXI_8 (.I0(CLK), 
                .I1(Button), 
                .O(XLXN_3));
endmodule
