////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Display.vf
// /___/   /\     Timestamp : 10/11/2022 12:58:35
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/Chaks/Desktop/Lab6/Lab6/Display.vf -w C:/Users/Chaks/Desktop/Lab6/Lab6/Display.sch
//Design Name: Display
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Display(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module decoder_MUSER_Display(BCD, 
                             a, 
                             b, 
                             c, 
                             d, 
                             e, 
                             f, 
                             g);

    input [3:0] BCD;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   
   wire XLXN_7;
   wire XLXN_10;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_37;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   
   NAND2  XLXI_2 (.I0(BCD[2]), 
                 .I1(BCD[2]), 
                 .O(XLXN_7));
   NAND2  XLXI_3 (.I0(BCD[1]), 
                 .I1(BCD[1]), 
                 .O(XLXN_10));
   NAND2  XLXI_4 (.I0(BCD[0]), 
                 .I1(BCD[0]), 
                 .O(XLXN_13));
   AND2  XLXI_5 (.I0(XLXN_7), 
                .I1(XLXN_13), 
                .O(XLXN_14));
   AND2  XLXI_6 (.I0(BCD[2]), 
                .I1(BCD[0]), 
                .O(XLXN_15));
   OR4  XLXI_7 (.I0(XLXN_14), 
               .I1(BCD[1]), 
               .I2(XLXN_15), 
               .I3(BCD[3]), 
               .O(a));
   OR3  XLXI_8 (.I0(XLXN_7), 
               .I1(XLXN_19), 
               .I2(XLXN_20), 
               .O(b));
   AND2  XLXI_9 (.I0(XLXN_10), 
                .I1(XLXN_13), 
                .O(XLXN_19));
   AND2  XLXI_10 (.I0(BCD[1]), 
                 .I1(BCD[0]), 
                 .O(XLXN_20));
   OR3  XLXI_11 (.I0(XLXN_10), 
                .I1(BCD[0]), 
                .I2(BCD[2]), 
                .O(c));
   OR5  XLXI_12 (.I0(XLXN_32), 
                .I1(XLXN_33), 
                .I2(XLXN_34), 
                .I3(XLXN_37), 
                .I4(BCD[3]), 
                .O(d));
   AND2  XLXI_13 (.I0(XLXN_7), 
                 .I1(XLXN_13), 
                 .O(XLXN_32));
   AND2  XLXI_15 (.I0(XLXN_7), 
                 .I1(BCD[1]), 
                 .O(XLXN_33));
   AND3  XLXI_16 (.I0(BCD[2]), 
                 .I1(XLXN_10), 
                 .I2(BCD[0]), 
                 .O(XLXN_34));
   AND2  XLXI_17 (.I0(BCD[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_37));
   AND2  XLXI_18 (.I0(XLXN_7), 
                 .I1(XLXN_13), 
                 .O(XLXN_41));
   AND2  XLXI_19 (.I0(BCD[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_40));
   OR2  XLXI_20 (.I0(XLXN_41), 
                .I1(XLXN_40), 
                .O(e));
   AND2  XLXI_21 (.I0(XLXN_10), 
                 .I1(XLXN_13), 
                 .O(XLXN_44));
   AND2  XLXI_22 (.I0(BCD[2]), 
                 .I1(XLXN_10), 
                 .O(XLXN_45));
   AND2  XLXI_23 (.I0(BCD[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_46));
   OR4  XLXI_24 (.I0(XLXN_44), 
                .I1(XLXN_45), 
                .I2(XLXN_46), 
                .I3(BCD[3]), 
                .O(f));
   AND2  XLXI_25 (.I0(XLXN_7), 
                 .I1(BCD[1]), 
                 .O(XLXN_50));
   AND2  XLXI_26 (.I0(BCD[2]), 
                 .I1(XLXN_10), 
                 .O(XLXN_49));
   AND2  XLXI_27 (.I0(BCD[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_48));
   OR4  XLXI_28 (.I0(XLXN_50), 
                .I1(XLXN_49), 
                .I2(BCD[3]), 
                .I3(XLXN_48), 
                .O(g));
endmodule
`timescale 1ns / 1ps

module Mux2_1_4_MUSER_Display(A, 
                              B, 
                              S, 
                              Y);

    input [3:0] A;
    input [3:0] B;
    input S;
   output [3:0] Y;
   
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   
   AND2  XLXI_1 (.I0(XLXN_32), 
                .I1(A[0]), 
                .O(XLXN_33));
   AND2  XLXI_2 (.I0(XLXN_32), 
                .I1(A[1]), 
                .O(XLXN_34));
   AND2  XLXI_3 (.I0(XLXN_32), 
                .I1(A[2]), 
                .O(XLXN_35));
   AND2  XLXI_4 (.I0(XLXN_32), 
                .I1(A[3]), 
                .O(XLXN_36));
   AND2  XLXI_5 (.I0(S), 
                .I1(B[0]), 
                .O(XLXN_37));
   AND2  XLXI_6 (.I0(S), 
                .I1(B[1]), 
                .O(XLXN_38));
   AND2  XLXI_7 (.I0(S), 
                .I1(B[2]), 
                .O(XLXN_39));
   AND2  XLXI_8 (.I0(S), 
                .I1(B[3]), 
                .O(XLXN_40));
   INV  XLXI_16 (.I(S), 
                .O(XLXN_32));
   OR2  XLXI_17 (.I0(XLXN_37), 
                .I1(XLXN_33), 
                .O(Y[0]));
   OR2  XLXI_18 (.I0(XLXN_38), 
                .I1(XLXN_34), 
                .O(Y[1]));
   OR2  XLXI_19 (.I0(XLXN_39), 
                .I1(XLXN_35), 
                .O(Y[2]));
   OR2  XLXI_20 (.I0(XLXN_40), 
                .I1(XLXN_36), 
                .O(Y[3]));
endmodule
`timescale 1ns / 1ps

module Display(CLK, 
               n1, 
               n10, 
               Common, 
               Segments);

    input CLK;
    input [3:0] n1;
    input [3:0] n10;
   output [1:0] Common;
   output [0:6] Segments;
   
   wire [3:0] XLXN_58;
   wire XLXN_77;
   wire XLXN_79;
   wire XLXN_81;
   
   Mux2_1_4_MUSER_Display  XLXI_21 (.A(n10[3:0]), 
                                   .B(n1[3:0]), 
                                   .S(XLXN_81), 
                                   .Y(XLXN_58[3:0]));
   decoder_MUSER_Display  XLXI_27 (.BCD(XLXN_58[3:0]), 
                                  .a(Segments[0]), 
                                  .b(Segments[1]), 
                                  .c(Segments[2]), 
                                  .d(Segments[3]), 
                                  .e(Segments[4]), 
                                  .f(Segments[5]), 
                                  .g(Segments[6]));
   INV  XLXI_29 (.I(XLXN_81), 
                .O(Common[1]));
   (* HU_SET = "XLXI_31_0" *) 
   FJKC_HXILINX_Display  XLXI_31 (.C(CLK), 
                                 .CLR(XLXN_79), 
                                 .J(XLXN_77), 
                                 .K(XLXN_77), 
                                 .Q(XLXN_81));
   VCC  XLXI_32 (.P(XLXN_77));
   GND  XLXI_33 (.G(XLXN_79));
   BUF  XLXI_34 (.I(XLXN_81), 
                .O(Common[0]));
endmodule
