////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Lab7.vf
// /___/   /\     Timestamp : 10/23/2022 21:15:39
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "C:/Users/Peqch/Desktop/Digital system Fundamental/ISE/DSF/LAB07/Lab7.vf" -w "C:/Users/Peqch/Desktop/Digital system Fundamental/ISE/DSF/LAB07/Lab7.sch"
//Design Name: Lab7
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTC_HXILINX_Lab7(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Lab7(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_Lab7(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module COUNTER0_9_MUSER_Lab7(CLK, 
                             Clr, 
                             bit, 
                             TC);

    input CLK;
    input Clr;
   output [3:0] bit;
   output TC;
   
   wire XLXN_3;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_65;
   wire XLXN_93;
   wire XLXN_95;
   wire XLXN_96;
   wire [3:0] bit_DUMMY;
   
   assign bit[3:0] = bit_DUMMY[3:0];
   (* HU_SET = "XLXI_1_16" *) 
   FJKC_HXILINX_Lab7  XLXI_1 (.C(CLK), 
                             .CLR(Clr), 
                             .J(XLXN_3), 
                             .K(XLXN_3), 
                             .Q(bit_DUMMY[0]));
   VCC  XLXI_3 (.P(XLXN_3));
   (* HU_SET = "XLXI_4_17" *) 
   FJKC_HXILINX_Lab7  XLXI_4 (.C(CLK), 
                             .CLR(Clr), 
                             .J(XLXN_62), 
                             .K(bit_DUMMY[0]), 
                             .Q(bit_DUMMY[1]));
   (* HU_SET = "XLXI_5_18" *) 
   FJKC_HXILINX_Lab7  XLXI_5 (.C(CLK), 
                             .CLR(Clr), 
                             .J(XLXN_63), 
                             .K(XLXN_63), 
                             .Q(bit_DUMMY[2]));
   (* HU_SET = "XLXI_9_19" *) 
   FJKC_HXILINX_Lab7  XLXI_9 (.C(CLK), 
                             .CLR(Clr), 
                             .J(XLXN_65), 
                             .K(bit_DUMMY[0]), 
                             .Q(bit_DUMMY[3]));
   AND2B1  XLXI_37 (.I0(bit_DUMMY[3]), 
                   .I1(bit_DUMMY[0]), 
                   .O(XLXN_62));
   AND2  XLXI_38 (.I0(bit_DUMMY[1]), 
                 .I1(bit_DUMMY[0]), 
                 .O(XLXN_63));
   AND3  XLXI_40 (.I0(bit_DUMMY[2]), 
                 .I1(bit_DUMMY[1]), 
                 .I2(bit_DUMMY[0]), 
                 .O(XLXN_65));
   OR2  XLXI_53 (.I0(bit_DUMMY[1]), 
                .I1(bit_DUMMY[0]), 
                .O(XLXN_95));
   OR2  XLXI_54 (.I0(bit_DUMMY[3]), 
                .I1(bit_DUMMY[2]), 
                .O(XLXN_96));
   OR2  XLXI_55 (.I0(XLXN_96), 
                .I1(XLXN_95), 
                .O(XLXN_93));
   INV  XLXI_56 (.I(XLXN_93), 
                .O(TC));
endmodule
`timescale 1ns / 1ps

module Div200_MUSER_Lab7(CLR, 
                         In_CLK, 
                         Out_CLK);

    input CLR;
    input In_CLK;
   output Out_CLK;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   
   COUNTER0_9_MUSER_Lab7  XLXI_1 (.CLK(In_CLK), 
                                 .Clr(CLR), 
                                 .bit(), 
                                 .TC(XLXN_1));
   COUNTER0_9_MUSER_Lab7  XLXI_2 (.CLK(XLXN_1), 
                                 .Clr(CLR), 
                                 .bit(), 
                                 .TC(XLXN_2));
   (* HU_SET = "XLXI_3_20" *) 
   FTC_HXILINX_Lab7  XLXI_3 (.C(XLXN_2), 
                            .CLR(CLR), 
                            .T(XLXN_3), 
                            .Q(Out_CLK));
   VCC  XLXI_4 (.P(XLXN_3));
endmodule
`timescale 1ns / 1ps

module Div100k_MUSER_Lab7(CLR, 
                          In_CLK, 
                          Out_CLK);

    input CLR;
    input In_CLK;
   output Out_CLK;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_11;
   
   COUNTER0_9_MUSER_Lab7  XLXI_1 (.CLK(In_CLK), 
                                 .Clr(CLR), 
                                 .bit(), 
                                 .TC(XLXN_1));
   COUNTER0_9_MUSER_Lab7  XLXI_2 (.CLK(XLXN_1), 
                                 .Clr(CLR), 
                                 .bit(), 
                                 .TC(XLXN_2));
   COUNTER0_9_MUSER_Lab7  XLXI_3 (.CLK(XLXN_2), 
                                 .Clr(CLR), 
                                 .bit(), 
                                 .TC(XLXN_3));
   COUNTER0_9_MUSER_Lab7  XLXI_4 (.CLK(XLXN_3), 
                                 .Clr(CLR), 
                                 .bit(), 
                                 .TC(XLXN_11));
   COUNTER0_9_MUSER_Lab7  XLXI_5 (.CLK(XLXN_11), 
                                 .Clr(CLR), 
                                 .bit(), 
                                 .TC(Out_CLK));
endmodule
`timescale 1ns / 1ps

module Display_MUSER_Lab7(Blink_Hold, 
                          CLR, 
                          M1, 
                          M10, 
                          ScanCLK, 
                          S1, 
                          S10, 
                          a, 
                          b, 
                          c, 
                          d, 
                          Digit0, 
                          Digit1, 
                          Digit2, 
                          Digit3, 
                          e, 
                          f, 
                          g, 
                          h);

    input Blink_Hold;
    input CLR;
    input [3:0] M1;
    input [3:0] M10;
    input ScanCLK;
    input [3:0] S1;
    input [3:0] S10;
   output a;
   output b;
   output c;
   output d;
   output Digit0;
   output Digit1;
   output Digit2;
   output Digit3;
   output e;
   output f;
   output g;
   output h;
   
   wire XLXN_6;
   wire XLXN_28;
   wire XLXN_49;
   wire XLXN_80;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_89;
   wire XLXN_94;
   wire XLXN_169;
   wire XLXN_173;
   wire XLXN_175;
   wire XLXN_176;
   wire [3:0] Y;
   
   MUX4_1_4  XLXI_1 (.Q0(M1[3:0]), 
                    .Q1(M10[3:0]), 
                    .Q2(S1[3:0]), 
                    .Q3(S10[3:0]), 
                    .S0(XLXN_49), 
                    .S1(XLXN_28), 
                    .Y(Y[3:0]));
   VCC  XLXI_7 (.P(XLXN_6));
   decoder  XLXI_11 (.A0(Y[0]), 
                    .A1(Y[1]), 
                    .A2(Y[2]), 
                    .A3(Y[3]), 
                    .a(a), 
                    .b(b), 
                    .c(c), 
                    .d(d), 
                    .e(e), 
                    .f(f), 
                    .g(g));
   AND2  XLXI_15 (.I0(XLXN_49), 
                 .I1(XLXN_28), 
                 .O(XLXN_82));
   AND2B2  XLXI_16 (.I0(XLXN_49), 
                   .I1(XLXN_28), 
                   .O(XLXN_175));
   AND2B1  XLXI_17 (.I0(XLXN_49), 
                   .I1(XLXN_28), 
                   .O(XLXN_83));
   AND2B1  XLXI_18 (.I0(XLXN_28), 
                   .I1(XLXN_49), 
                   .O(XLXN_80));
   INV  XLXI_21 (.I(XLXN_80), 
                .O(Digit3));
   INV  XLXI_22 (.I(XLXN_175), 
                .O(Digit2));
   INV  XLXI_23 (.I(XLXN_82), 
                .O(Digit1));
   INV  XLXI_24 (.I(XLXN_83), 
                .O(Digit0));
   (* HU_SET = "XLXI_31_21" *) 
   CB2CE_HXILINX_Lab7  XLXI_31 (.C(XLXN_89), 
                               .CE(XLXN_6), 
                               .CLR(CLR), 
                               .CEO(), 
                               .Q0(XLXN_49), 
                               .Q1(XLXN_28), 
                               .TC());
   Div100k_MUSER_Lab7  XLXI_32 (.CLR(CLR), 
                               .In_CLK(ScanCLK), 
                               .Out_CLK(XLXN_89));
   AND2  XLXI_34 (.I0(Blink_Hold), 
                 .I1(XLXN_175), 
                 .O(XLXN_94));
   OR2  XLXI_35 (.I0(XLXN_94), 
                .I1(XLXN_169), 
                .O(h));
   AND2  XLXI_45 (.I0(XLXN_175), 
                 .I1(XLXN_176), 
                 .O(XLXN_169));
   Div200_MUSER_Lab7  XLXI_46 (.CLR(CLR), 
                              .In_CLK(XLXN_89), 
                              .Out_CLK(XLXN_173));
   FD #( .INIT(1'b0) ) XLXI_52 (.C(ScanCLK), 
               .D(XLXN_173), 
               .Q(XLXN_176));
endmodule
`timescale 1ns / 1ps

module counter0_5_MUSER_Lab7(C, 
                             Clr, 
                             bits, 
                             TC);

    input C;
    input Clr;
   output [3:0] bits;
   output TC;
   
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_16;
   wire [3:0] bits_DUMMY;
   
   assign bits[3:0] = bits_DUMMY[3:0];
   (* HU_SET = "XLXI_1_22" *) 
   FJKC_HXILINX_Lab7  XLXI_1 (.C(C), 
                             .CLR(Clr), 
                             .J(XLXN_6), 
                             .K(XLXN_6), 
                             .Q(bits_DUMMY[0]));
   (* HU_SET = "XLXI_2_23" *) 
   FJKC_HXILINX_Lab7  XLXI_2 (.C(C), 
                             .CLR(Clr), 
                             .J(XLXN_9), 
                             .K(bits_DUMMY[0]), 
                             .Q(bits_DUMMY[1]));
   (* HU_SET = "XLXI_3_24" *) 
   FJKC_HXILINX_Lab7  XLXI_3 (.C(C), 
                             .CLR(Clr), 
                             .J(XLXN_16), 
                             .K(bits_DUMMY[0]), 
                             .Q(bits_DUMMY[2]));
   VCC  XLXI_8 (.P(XLXN_6));
   AND2B1  XLXI_9 (.I0(bits_DUMMY[2]), 
                  .I1(bits_DUMMY[0]), 
                  .O(XLXN_9));
   AND2  XLXI_10 (.I0(bits_DUMMY[1]), 
                 .I1(bits_DUMMY[0]), 
                 .O(XLXN_16));
   GND  XLXI_12 (.G(bits_DUMMY[3]));
   NOR3  XLXI_14 (.I0(bits_DUMMY[2]), 
                 .I1(bits_DUMMY[1]), 
                 .I2(bits_DUMMY[0]), 
                 .O(TC));
endmodule
`timescale 1ns / 1ps

module Counter_MUSER_Lab7(activator, 
                          Clear, 
                          CLK_C, 
                          CLEARER, 
                          Hold_Dp, 
                          Min1, 
                          Min10, 
                          Sec1, 
                          Sec10);

    input activator;
    input Clear;
    input CLK_C;
   output CLEARER;
   output Hold_Dp;
   output [3:0] Min1;
   output [3:0] Min10;
   output [3:0] Sec1;
   output [3:0] Sec10;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_34;
   wire XLXN_39;
   wire XLXN_42;
   wire XLXN_47;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_130;
   wire CLEARER_DUMMY;
   
   assign CLEARER = CLEARER_DUMMY;
   counter0_5_MUSER_Lab7  XLXI_4 (.C(XLXN_39), 
                                 .Clr(CLEARER_DUMMY), 
                                 .bits(Sec10[3:0]), 
                                 .TC(XLXN_42));
   (* HU_SET = "XLXI_5_25" *) 
   FTC_HXILINX_Lab7  XLXI_5 (.C(activator), 
                            .CLR(XLXN_34), 
                            .T(XLXN_5), 
                            .Q(XLXN_4));
   AND2  XLXI_6 (.I0(Clear), 
                .I1(XLXN_3), 
                .O(CLEARER_DUMMY));
   AND2  XLXI_7 (.I0(CLK_C), 
                .I1(XLXN_4), 
                .O(XLXN_50));
   INV  XLXI_8 (.I(XLXN_4), 
               .O(XLXN_3));
   VCC  XLXI_9 (.P(XLXN_5));
   GND  XLXI_12 (.G(XLXN_34));
   COUNTER0_9_MUSER_Lab7  XLXI_13 (.CLK(XLXN_47), 
                                  .Clr(CLEARER_DUMMY), 
                                  .bit(Min10[3:0]), 
                                  .TC());
   COUNTER0_9_MUSER_Lab7  XLXI_14 (.CLK(XLXN_130), 
                                  .Clr(CLEARER_DUMMY), 
                                  .bit(Sec1[3:0]), 
                                  .TC(XLXN_39));
   COUNTER0_9_MUSER_Lab7  XLXI_15 (.CLK(XLXN_42), 
                                  .Clr(CLEARER_DUMMY), 
                                  .bit(Min1[3:0]), 
                                  .TC(XLXN_47));
   INV  XLXI_16 (.I(XLXN_4), 
                .O(Hold_Dp));
   Div100k_MUSER_Lab7  XLXI_17 (.CLR(CLEARER_DUMMY), 
                               .In_CLK(XLXN_50), 
                               .Out_CLK(XLXN_51));
   Div200_MUSER_Lab7  XLXI_18 (.CLR(CLEARER_DUMMY), 
                              .In_CLK(XLXN_51), 
                              .Out_CLK(XLXN_130));
endmodule
`timescale 1ns / 1ps

module Lab7(OSC, 
            Reset, 
            StartStop, 
            Common0, 
            Common1, 
            Common2, 
            Common3, 
            XLXN_10, 
            XLXN_11, 
            XLXN_12, 
            XLXN_13, 
            XLXN_14, 
            XLXN_15, 
            XLXN_16, 
            XLXN_17);

    input OSC;
    input Reset;
    input StartStop;
   output Common0;
   output Common1;
   output Common2;
   output Common3;
   output XLXN_10;
   output XLXN_11;
   output XLXN_12;
   output XLXN_13;
   output XLXN_14;
   output XLXN_15;
   output XLXN_16;
   output XLXN_17;
   
   wire [3:0] XLXN_1;
   wire [3:0] XLXN_2;
   wire [3:0] XLXN_3;
   wire [3:0] XLXN_4;
   wire XLXN_7;
   wire XLXN_25;
   wire XLXN_71;
   
   Counter_MUSER_Lab7  XLXI_2 (.activator(XLXN_25), 
                              .Clear(Reset), 
                              .CLK_C(OSC), 
                              .CLEARER(XLXN_71), 
                              .Hold_Dp(XLXN_7), 
                              .Min1(XLXN_4[3:0]), 
                              .Min10(XLXN_3[3:0]), 
                              .Sec1(XLXN_1[3:0]), 
                              .Sec10(XLXN_2[3:0]));
   BUFH  XLXI_4 (.I(StartStop), 
                .O(XLXN_25));
   Display_MUSER_Lab7  XLXI_5 (.Blink_Hold(XLXN_7), 
                              .CLR(XLXN_71), 
                              .M1(XLXN_4[3:0]), 
                              .M10(XLXN_3[3:0]), 
                              .ScanCLK(OSC), 
                              .S1(XLXN_1[3:0]), 
                              .S10(XLXN_2[3:0]), 
                              .a(XLXN_10), 
                              .b(XLXN_11), 
                              .c(XLXN_12), 
                              .d(XLXN_13), 
                              .Digit0(Common0), 
                              .Digit1(Common1), 
                              .Digit2(Common2), 
                              .Digit3(Common3), 
                              .e(XLXN_14), 
                              .f(XLXN_15), 
                              .g(XLXN_16), 
                              .h(XLXN_17));
endmodule
